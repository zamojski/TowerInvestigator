/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

// each of the version numbers must be 0-99
def versionMajor = 1 // major releases
def versionMinor = 0 // minor feature releases
def versionPatch = 0 // hot fixes
def versionBuild = 1 // build version

// Double check the versioning
for (versionPart in [versionPatch, versionMinor, versionMajor, versionBuild]) {
    assert 0 <= versionPart
    assert versionPart <= 99
}


apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "info.zamojski.soft.towerinvestigator"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        // Custom configuration
        buildConfigField "String", "EMAIL_ADDRESS", getMyApiKey("email_address")
    }
    buildTypes {
        debug {
            versionNameSuffix "-debug"
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled true
            shrinkResources true
            debuggable false
            zipAlignEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:26.1.0'
    compile 'com.github.hotchemi:permissionsdispatcher:3.1.0'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:3.1.0'
}

def getMyApiKey(String property) {
    Properties properties = new Properties()
    properties.load(new FileInputStream("app/properties/config.properties"))
    return properties.getProperty(property)
}
